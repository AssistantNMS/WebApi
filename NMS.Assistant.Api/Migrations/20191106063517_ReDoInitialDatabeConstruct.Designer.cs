// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NMS.Assistant.Persistence;

namespace NMS.Assistant.Api.Migrations
{
    [DbContext(typeof(NmsAssistantContext))]
    [Migration("20191106063517_ReDoInitialDatabeConstruct")]
    partial class ReDoInitialDatabeConstruct
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NMS.Assistant.Persistence.Entity.Donation", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Amount")
                        .IsRequired();

                    b.Property<DateTime>("DonationDate");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("Type");

                    b.HasKey("Guid");

                    b.ToTable("Donations");
                });

            modelBuilder.Entity("NMS.Assistant.Persistence.Entity.Feedback", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Guid");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("NMS.Assistant.Persistence.Entity.FeedbackAnswer", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AnonymousUserGuid");

                    b.Property<string>("Answer")
                        .IsRequired();

                    b.Property<int>("AppType");

                    b.Property<DateTime>("DateAnswered");

                    b.Property<Guid>("FeedbackGuid");

                    b.Property<Guid>("FeedbackQuestionGuid");

                    b.HasKey("Guid");

                    b.HasIndex("FeedbackGuid");

                    b.HasIndex("FeedbackQuestionGuid");

                    b.ToTable("FeedbackAnswers");
                });

            modelBuilder.Entity("NMS.Assistant.Persistence.Entity.FeedbackQuestion", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("FeedbackGuid");

                    b.Property<string>("Question")
                        .IsRequired();

                    b.Property<int>("Type");

                    b.HasKey("Guid");

                    b.HasIndex("FeedbackGuid");

                    b.ToTable("FeedbackQuestions");
                });

            modelBuilder.Entity("NMS.Assistant.Persistence.Entity.User", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("HashedPassword")
                        .IsRequired();

                    b.Property<DateTime>("JoinDate");

                    b.Property<string>("Username")
                        .IsRequired();

                    b.HasKey("Guid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NMS.Assistant.Persistence.Entity.FeedbackAnswer", b =>
                {
                    b.HasOne("NMS.Assistant.Persistence.Entity.Feedback", "Feedback")
                        .WithMany("Answers")
                        .HasForeignKey("FeedbackGuid")
                        .HasConstraintName("ForeignKey_FeedbackAnswer_Feedback")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NMS.Assistant.Persistence.Entity.FeedbackQuestion", "FeedbackQuestion")
                        .WithMany("Answers")
                        .HasForeignKey("FeedbackQuestionGuid")
                        .HasConstraintName("ForeignKey_FeedbackAnswer_FeedbackQuestion")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("NMS.Assistant.Persistence.Entity.FeedbackQuestion", b =>
                {
                    b.HasOne("NMS.Assistant.Persistence.Entity.Feedback", "Feedback")
                        .WithMany("Questions")
                        .HasForeignKey("FeedbackGuid")
                        .HasConstraintName("ForeignKey_FeedbackQuestion_Feedback")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
